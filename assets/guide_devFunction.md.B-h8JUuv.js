import{d as r,ak as u,c as i,o as s,F as c,B as k,j as t,t as h,k as m,_ as g,G as _,ah as v,a as n}from"./chunks/framework.CaXvd2Ka.js";const F=JSON.parse('[{"text":"Bom","link":"/Bom/useLocationInfo/"},{"text":"Common","link":"/Common/useCommonType/"},{"text":"Date","link":"/Date/useFormatDate/"},{"text":"Dom","link":"/Dom/useDownloadFile/"},{"text":"Number","link":"/Number/useRandomInteger/"},{"text":"Object","link":"/Object/useObjectIsEmpty/"},{"text":"Plugin","link":"/Plugin/useDayjs/"},{"text":"Regexp","link":"/Regexp/useCheckPhoneNumber/"},{"text":"String","link":"/String/useCheckIncludeEmoji/"},{"text":"Node","link":"/Node/useGetCurrentPath"}]'),f={id:"modules-show-container"},x=["onClick"],E=r({__name:"DevFunctionModulesShow",setup(d){const a=u(),e=o=>{a.go(`/flypeng-tool${o.link}`)};return(o,b)=>(s(),i("div",f,[(s(!0),i(c,null,k(m(F),(l,p)=>(s(),i("div",{key:p},[t("span",{class:"item",onClick:C=>e(l)},"- "+h(l.text)+" Functions 模块",9,x)]))),128))]))}}),y=g(E,[["__scopeId","data-v-9384d8a6"]]),B=JSON.parse('{"title":"Dev Function","description":"","frontmatter":{},"headers":[],"relativePath":"guide/devFunction.md","filePath":"guide/devFunction.md","lastUpdated":1749980121000}'),D={name:"guide/devFunction.md"},P=r({...D,setup(d){return(a,e)=>(s(),i("div",null,[e[0]||(e[0]=t("h1",{id:"dev-function",tabindex:"-1"},[n("Dev Function "),t("a",{class:"header-anchor",href:"#dev-function","aria-label":'Permalink to "Dev Function"'},"​")],-1)),e[1]||(e[1]=t("h2",{id:"introduction",tabindex:"-1"},[n("Introduction "),t("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "Introduction"'},"​")],-1)),e[2]||(e[2]=t("p",null,"当你准备新增函数时，根据新函数的特性来决定放置在哪个模块中，以便于能够快速找到该函数。",-1)),e[3]||(e[3]=t("p",null,[n("目前 "),t("strong",null,"@flypeng/tool"),n(" 已经存在如下工具模块：")],-1)),_(y),e[4]||(e[4]=v(`<p>添加新函数时，请运行 <code>pnpm run new</code> 来自动生成相关文件同时参考已存在函数的形式来进行开发</p><h2 id="attention-detail" tabindex="-1">Attention Detail <a class="header-anchor" href="#attention-detail" aria-label="Permalink to &quot;Attention Detail&quot;">​</a></h2><ol><li><p>函数命名统一： <code>useAaBb</code></p></li><li><p>函数统一被默认导出</p></li><li><p>函数命名时要确保名称唯一，不可重复</p></li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useBrowser } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@flypeng/tool/browser&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useNode } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@flypeng/tool/node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>`,4))]))}});export{B as __pageData,P as default};
